#!/bin/bash

# EchoHub Quick Deploy
# Usage: ./scripts/deploy [staging|production]
#
# Triggers GitHub Actions deployment from your terminal

set -e

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# Parse arguments
ENV=${1:-staging}

# Validate environment
if [[ ! "$ENV" =~ ^(staging|production)$ ]]; then
    echo -e "${RED}❌ Invalid environment. Use: staging or production${NC}"
    echo ""
    echo "Usage:"
    echo "  ./scripts/deploy staging     # Deploy to staging (hub-staging.echotravel.app)"
    echo "  ./scripts/deploy production  # Deploy to production (hub.echotravel.app)"
    exit 1
fi

# Set branch based on environment
if [ "$ENV" == "production" ]; then
    BRANCH="main"
    URL="https://hub.echotravel.app"
else
    BRANCH="development"
    URL="https://hub-staging.echotravel.app"
fi

# Confirmation for production
if [ "$ENV" == "production" ]; then
    echo -e "${YELLOW}⚠️  WARNING: You are about to deploy to PRODUCTION!${NC}"
    echo -e "${YELLOW}   URL: $URL${NC}"
    echo ""
    read -p "Are you sure you want to continue? (yes/no): " -r
    if [[ ! $REPLY =~ ^[Yy][Ee][Ss]$ ]]; then
        echo -e "${RED}❌ Deployment cancelled${NC}"
        exit 1
    fi
    echo ""
fi

# Check if gh CLI is installed
if ! command -v gh &> /dev/null; then
    echo -e "${RED}❌ GitHub CLI (gh) is not installed${NC}"
    echo ""
    echo "Install it from: https://cli.github.com/"
    echo "Or run: brew install gh"
    exit 1
fi

# Check if authenticated
if ! gh auth status &> /dev/null 2>&1; then
    echo -e "${YELLOW}📝 GitHub CLI not authenticated. Authenticating...${NC}"
    gh auth login
fi

echo -e "${GREEN}🚀 Deploying to $ENV...${NC}"
echo -e "${YELLOW}   Branch: $BRANCH${NC}"
echo -e "${YELLOW}   URL: $URL${NC}"
echo ""

# Push latest changes to trigger deployment
echo -e "${YELLOW}📤 Pushing latest changes to $BRANCH...${NC}"
git checkout $BRANCH 2>/dev/null || {
    echo -e "${RED}❌ Branch $BRANCH not found${NC}"
    echo -e "${YELLOW}💡 Make sure you've committed your changes${NC}"
    exit 1
}

git push origin $BRANCH

echo ""
echo -e "${GREEN}✅ Deployment triggered!${NC}"
echo ""
echo -e "${YELLOW}📊 Monitoring deployment...${NC}"

# Wait a moment for workflow to start
sleep 3

# Watch the workflow
gh run watch

echo ""
echo -e "${GREEN}🎉 Deployment complete!${NC}"
echo -e "${GREEN}🌐 Visit: $URL${NC}"
echo ""
echo -e "${YELLOW}💡 Tip: Check the site to verify everything works${NC}"
